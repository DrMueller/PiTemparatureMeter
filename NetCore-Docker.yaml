name: 1.0$(rev:.r) # build numbering format

resources:
- repo: self
- repository: ALMStuff
    type: github
    name: DrMueller/ALMStuff
    ref: refs/heads/master
    endpoint: GitHub-DrMueller

queue:
  name: Hosted Ubuntu 1604

variables:
  BuildConfiguration: 'Release'
  FolderToPublish: 'Application'
  ApplyDockerstack: false

jobs:
- job: 'BuildAndPublishAsArtifact'
  displayName: 'Build and save zipped Artifact'
  pool:
    name: Default
  steps:
  - template: AzureDevOps/BuildTemplates/NetCore/Steps/Initialize_And_Test.yaml@ALMStuff
    parameters:
      buildConfiguration: $(BuildConfiguration)
  - template: AzureDevOps/BuildTemplates/NetCore/Steps/Publish.yaml@ALMStuff
    parameters:
      BuildConfiguration: $(BuildConfiguration)
      FolderToPublish: $(FolderToPublish)
  - template: AzureDevOps/BuildTemplates/NetCore/Steps/Zip_And_Save_Artifact.yaml@ALMStuff

- task: YodLabs.VariableTasks.SetVariable.SetVariable@0
  displayName: 'Set Variable ImageName to $(Build.Repository.Name) with toLowerCase applied'
  inputs:
    variableName: ImageName

    value: '$(Build.Repository.Name)'

    transform: toLowerCase


- task: YodLabs.VariableTasks.SetVariable.SetVariable@0
  displayName: 'Set Variable ImageName to $(ImageName) with replace applied'
  inputs:
    variableName: ImageName

    value: '$(ImageName)'

    transform: replace

    searchValue: '\.'

    newValue: '-'


- task: Docker@0
  displayName: 'Build Docker Image'
  inputs:
    containerregistrytype: 'Container Registry'

    dockerRegistryConnection: DockerHub

    imageName: '$(ImageName)'

    additionalImageTags: '$(Build.BuildNumber)'

    includeLatestTag: true


- task: Docker@0
  displayName: 'Push Docker Image'
  inputs:
    containerregistrytype: 'Container Registry'

    dockerRegistryConnection: DockerHub

    action: 'Push an image'

    imageName: '$(ImageName)'

    additionalImageTags: '$(Build.BuildNumber)'

    includeLatestTag: true

- ${{ if eq(ApplyDockerstack, true) }}:
  - task: powershell@2
    displayName: 'Update DockerStack'
    inputs:
      targetType: filePath
      filePath: './Scripts/Update-Dockerstack.ps1' 
      arguments: '-repositoryLocalPath $(Build.Repository.LocalPath) -imageName $(ImageName):$(Build.BuildNumber)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish DockerStack'
    inputs:
      PathtoPublish: 'docker-stack.yml'

